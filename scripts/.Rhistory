# Example time series data
data <- c(12, 15, 14, 17, 19, 20, 22, 23)
# Perform Mann-Kendall test
test_result <- Kendall(data)
library(trend)
data <- c(12, 15, 14, 17, 19, 20, 22, 23)
mk_result <- mk.test(data)
# Display results
print(mk_result)
ï¼ŸKendall
?Kendall
?mk.test
library(ggplot2)
library(Seurat)
library(ggpubr)
library(trend)
## ------- Inputs and parameters -------
allcell_abj=readRDS('/vf/users/Binbin_Kun/binbin/silvio/results/seurat/res0.6/annotated_seurat_res0.6.rds')
install.packages('Seurat')
library(ggplot2)
library(Seurat)
library(ggpubr)
library(trend)
## ------- Inputs and parameters -------
allcell_abj=readRDS('/vf/users/Binbin_Kun/binbin/silvio/results/seurat/res0.6/annotated_seurat_res0.6.rds')
cell_abund=read.delim('../data/cell_abundance_timepoint.txt')
cell_abund_sample=read.delim('../data/cell_abundance_sample_timepoint.txt')
subtype_abund_sample=read.delim('../data/subtype_abund_sample_timepoint.txt')
outdir='../results/figure1'
if (!dir.exists(outdir)){
dir.create(outdir,recursive = T)
}
## ------- F1A: UMAP of all cells -------
p1 = DimPlot(allcell_abj$RNA, reduction = "umap", label = F, repel = F, group.by = 'merged_tcell',
cols = c('Erythroblast' = '#D95F02', "CD8 T" = '#E7298A',"CD4 T" = '#B22222', "B cell"  = '#7570B3',
"Monocyte"  = '#1B9E77',"NK cell"  = '#66A61E',"Neutrophil"  = '#E6AB02',
"Dendritic cell"  = '#A6761D',"Basophil"  = '#666666'),raster=FALSE) + ggtitle("")
p1
## ------- F1C: box plot of CD8, CD4, B cell, and Neutrophil cell abundance at different time points -------
## Function
box_line_plot=function(tmp_df,alternative='less',prefix){
my_comparisons <- list( c("1", "2"),c("2", "3"),c("3", "4"),c("1", "3"),c("1", "4"))
p=ggplot(tmp_df, aes(x = timepoint, y = Relative_frequency)) +
# geom_boxplot(aes(fill = Group)) +
geom_boxplot(aes(fill = timepoint),alpha=0.5, width=0.5) +
geom_line(aes(group = Patient),color='gray45') +
#geom_point(size = 2, aes(color = Group))+
geom_point(size = 2, color = 'black')+
theme_classic()+
theme(legend.position = "none")+
#stat_compare_means(comparisons = my_comparisons,paired = TRUE)
#stat_compare_means(comparisons = my_comparisons,method = 'wilcox.test',method.args = list(alternative = "greater"))+
#stat_compare_means(comparisons = my_comparisons,method = 'wilcox.test')+
xlab('Timepoints')+ylab('Relative frequency')
if (alternative=='less'){
p = p + stat_compare_means(comparisons = my_comparisons,method = 'wilcox.test',method.args = list(alternative = "less"))
} else if (alternative=='greater'){
p = p + stat_compare_means(comparisons = my_comparisons,method = 'wilcox.test',method.args = list(alternative = "greater"))
}
ggsave(file.path(outdir,paste0(prefix,'.pdf')),p,width = 3.5,height = 4.5)
return(p)
}
## Plot
cell_abund_sample=na.omit(cell_abund_sample)
cell_abund_sample$timepoint=factor(cell_abund_sample$timepoint,levels = c(1,2,3,4))
# CD8 cell
tmp_df=cell_abund_sample[which(cell_abund_sample$cell_type=='CD8 T'),]
tmp_df=na.omit(tmp_df)
p3_1=box_line_plot(tmp_df,alternative='less',prefix='CD8_cell_all_sample')
p3_1
View(tmp_df)
## Teff abundance
subtype_abund_sample=na.omit(subtype_abund_sample)
subtype_abund_sample$timepoint=factor(subtype_abund_sample$timepoint,levels = c(1,2,3,4))
# response
df_res=subtype_abund_sample[which(subtype_abund_sample$Response=='Responders'&subtype_abund_sample$cell_type=='Effector memory CD8'),]
df_res=na.omit(df_res)
p4_1=box_line_plot(df_res,alternative='less',prefix='teff_response')
p4_1
tmp_df
df_res
test_result <- Kendall(x=df_res$timepoint, y=df_res$Relative_frequency)
test_result
?Kendall
df_res$timepoint
as.numeric(as.character(df_res$timepoint))
test_result <- Kendall(x=as.numeric(as.character(df_res$timepoint)), y=df_res$Relative_frequency)
test_result
# Mann-Kendall test for monotonic trend
df_res
# Mann-Kendall test for monotonic trend
df_res
test_result <- Kendall(x=as.numeric(as.character(df_res$timepoint)), y=df_res$Relative_frequency)
# Extract p-value and tau
tau <- result$tau
p_value <- result$sl
# Adjust p-value for one-tailed test
if (tau > 0) {
p_one_tailed <- p_value / 2  # For testing an increasing trend
} else {
p_one_tailed <- 1 - (p_value / 2)  # For testing a decreasing trend
}
# Mann-Kendall test for monotonic trend
df_res
test_result <- Kendall(x=as.numeric(as.character(df_res$timepoint)), y=df_res$Relative_frequency)
# Extract p-value and tau
tau <- result$tau
# Extract p-value and tau
tau <- test_result$tau
p_value <- test_result$sl
# Adjust p-value for one-tailed test
if (tau > 0) {
p_one_tailed <- p_value / 2  # For testing an increasing trend
} else {
p_one_tailed <- 1 - (p_value / 2)  # For testing a decreasing trend
}
p_one_tailed
# Mann-Kendall test for monotonic trend
one_tail_mk=function(df_res){
test_result <- Kendall(x=as.numeric(as.character(df_res$timepoint)), y=df_res$Relative_frequency)
# Extract p-value and tau
tau <- test_result$tau
p_value <- test_result$sl
# Adjust p-value for one-tailed test
if (tau > 0) {
p_one_tailed <- p_value / 2  # For testing an increasing trend
} else {
p_one_tailed <- 1 - (p_value / 2)  # For testing a decreasing trend
}
return(p_one_tailed)
}
one_tail_mk(df_res)
mk_res=one_tail_mk(df_res)
mk_res[1]
p4_1
p4_1=p4_1+geom_text(x=1, y=0.052, label=paste0("Mann-Kendall test p-value: ", signif(mk_res[1],2)))
p4_1
p4_1=p4_1+geom_text(x=3, y=0.0535, label=paste0("Mann-Kendall test p-value: ", signif(mk_res[1],2)))
p4_1
p4_1=p4_1+geom_text(x=3.5, y=0.0535, label=paste0("Mann-Kendall test p-value: ", signif(mk_res[1],2)))
p4_1
outdir
ggsave(file.path(outdir,paste0('teff_response_mk','.pdf')),p4_1,width = 3.5,height = 4.5)
# Mann-Kendall test for monotonic trend
one_tail_mk=function(df){
test_result <- Kendall(x=as.numeric(as.character(df$timepoint)), y=df$Relative_frequency)
# Extract p-value and tau
tau <- test_result$tau
p_value <- test_result$sl
# Adjust p-value for one-tailed test
if (tau > 0) {
p_one_tailed <- p_value / 2  # For testing an increasing trend
} else {
p_one_tailed <- 1 - (p_value / 2)  # For testing a decreasing trend
}
return(p_one_tailed)
}
mk_res=one_tail_mk(df_non)
# non-response
df_non=subtype_abund_sample[which(subtype_abund_sample$Response=='Non-responders'&subtype_abund_sample$cell_type=='Effector memory CD8'),]
df_non=na.omit(df_non)
p4_2=box_line_plot(df_non,alternative='less',prefix='teff_non_response')
mk_res=one_tail_mk(df_non)
mk_res
p4_2=p4_2+geom_text(x=3.5, y=0.0535, label=paste0("Mann-Kendall test p-value: ", signif(mk_res[1],2)))
p4_2
p4_2=p4_2+geom_text(x=3.5, y=0.052, label=paste0("Mann-Kendall test p-value: ", signif(mk_res[1],2)))
p4_2
p4_2=p4_2+geom_text(x=3.5, y=0.052, label=paste0("Mann-Kendall test p-value: ", signif(mk_res[1],2)))
ggsave(file.path(outdir,paste0('teff_non_response_mk','.pdf')),p4_2,width = 3.5,height = 4.5)
# response
df_res=subtype_abund_sample[which(subtype_abund_sample$Response=='Responders'&subtype_abund_sample$cell_type=='Effector memory CD8'),]
df_res=na.omit(df_res)
p4_1=box_line_plot(df_res,alternative='less',prefix='teff_response')
mk_res=one_tail_mk(df_res)
p4_1=p4_1+geom_text(x=3.5, y=0.0535, label=paste0("Mann-Kendall test p-value: ", signif(mk_res[1],2)))
ggsave(file.path(outdir,paste0('teff_response_mk','.pdf')),p4_1,width = 3.5,height = 4.5)
# non-response
df_non=subtype_abund_sample[which(subtype_abund_sample$Response=='Non-responders'&subtype_abund_sample$cell_type=='Effector memory CD8'),]
df_non=na.omit(df_non)
p4_2=box_line_plot(df_non,alternative='less',prefix='teff_non_response')
mk_res=one_tail_mk(df_non)
p4_2=p4_2+geom_text(x=3.5, y=0.052, label=paste0("Mann-Kendall test p-value: ", signif(mk_res[1],2)))
ggsave(file.path(outdir,paste0('teff_non_response_mk','.pdf')),p4_2,width = 3.5,height = 4.5)
unique(subtype_abund_sample$cell_type)
## Th1 CD4 abundance
# response
df_res=subtype_abund_sample[which(subtype_abund_sample$Response=='Responders'&subtype_abund_sample$cell_type=='Th1'),]
df_res=na.omit(df_res)
## Th1 CD4 abundance
# response
df_res=subtype_abund_sample[which(subtype_abund_sample$Response=='Responders'&subtype_abund_sample$cell_type=='Th1'),]
df_res=na.omit(df_res)
sp1=box_line_plot(df_res,alternative='less',prefix='th1_response')
sp1
mk_res=one_tail_mk(df_res)
sp1=sp1+geom_text(x=3.5, y=0.0535, label=paste0("Mann-Kendall test p-value: ", signif(mk_res[1],2)))
ggsave(file.path(outdir,paste0('th1_response_mk','.pdf')),sp1,width = 3.5,height = 4.5)
# non-response
df_non=subtype_abund_sample[which(subtype_abund_sample$Response=='Non-responders'&subtype_abund_sample$cell_type=='Th1'),]
df_non=na.omit(df_non)
sp1_non=box_line_plot(df_non,alternative='less',prefix='th1_non_response')
mk_res=one_tail_mk(df_non)
sp1_non=sp1_non+geom_text(x=3.5, y=0.052, label=paste0("Mann-Kendall test p-value: ", signif(mk_res[1],2)))
sp1_non=sp1_non+geom_text(x=3.5, y=0.052, label=paste0("Mann-Kendall test p-value: ", signif(mk_res[1],2)))
ggsave(file.path(outdir,paste0('th1_non_response_mk','.pdf')),sp1_non,width = 3.5,height = 4.5)
# responder vs non-responder
sp1_3=diff_abundance_box(cond1=df_res,cond2=df_non,prefix='th1_res_non',alternative = "less")
sp1_4=diff_abundance_line(cond1=df_res,cond2=df_non,prefix='th1_res_non_line',alternative = "less")
## ------- F1D: box plot of Teff, Th1 cell abundance between responders and non-responders -------
## Functions
# Box plot
diff_abundance_box=function(cond1,cond2,prefix,alternative = "less"){
df=rbind(cond1,cond2)
df$Response=factor(df$Response,levels = c('Responders','Non-responders'))
p <- ggboxplot(df, x = "timepoint", y = "Relative_frequency",
color = "Response", palette = "jco",
add = "jitter")
# p = p + stat_compare_means(aes(group = Response),label = "p.format",method = 'wilcox.test',method.args = list(alternative = "less"))
p = p + stat_compare_means(aes(group = Response),label = "p.format",method = 'wilcox.test',method.args = list(alternative = alternative))
# p = p + stat_compare_means(aes(group = Response),label = "p.format",method = 'wilcox.test')
p
ggsave(file.path(outdir,paste0(prefix,'.pdf')),p,width = 6,height = 4)
return(p)
}
# Line plot
diff_abundance_line=function(cond1,cond2,prefix,alternative = "less"){
df=rbind(cond1,cond2)
df$Response=factor(df$Response,levels = c('Responders','Non-responders'))
p=ggline(df, x = "timepoint", y = "Relative_frequency", add = "mean_se",
color = "Response", palette = "jco")+
#stat_compare_means(aes(group = Response), label = "p.signif")
stat_compare_means(aes(group = Response),label = "p.format",method = 'wilcox.test',method.args = list(alternative = alternative))
ggsave(file.path(outdir,paste0(prefix,'.pdf')),p,width = 6,height = 4)
return(p)
}
# responder vs non-responder
sp1_3=diff_abundance_box(cond1=df_res,cond2=df_non,prefix='th1_res_non',alternative = "less")
sp1_4=diff_abundance_line(cond1=df_res,cond2=df_non,prefix='th1_res_non_line',alternative = "less")
## B cell abundance
# response
df_res=subtype_abund_sample[which(subtype_abund_sample$Response=='Responders'&subtype_abund_sample$cell_type=='B cell'),]
df_res=na.omit(df_res)
p5_1=box_line_plot(df_res,alternative='less',prefix='b_response')
mk_res=one_tail_mk(df_res)
p5_1=p5_1+geom_text(x=3.5, y=0.052, label=paste0("Mann-Kendall test p-value: ", signif(mk_res[1],2)))
ggsave(file.path(outdir,paste0('b_response_mk','.pdf')),p5_1,width = 3.5,height = 4.5)
# non-response
df_non=subtype_abund_sample[which(subtype_abund_sample$Response=='Non-responders'&subtype_abund_sample$cell_type=='B cell'),]
df_non=na.omit(df_non)
p5_2=box_line_plot(df_non,alternative='less',prefix='b_non_response')
mk_res=one_tail_mk(df_non)
p5_2=p5_2+geom_text(x=3.5, y=0.052, label=paste0("Mann-Kendall test p-value: ", signif(mk_res[1],2)))
ggsave(file.path(outdir,paste0('b_non_response_mk','.pdf')),p5_2,width = 3.5,height = 4.5)
mk_res
## B cell abundance
# response
df_res=subtype_abund_sample[which(subtype_abund_sample$Response=='Responders'&subtype_abund_sample$cell_type=='B cell'),]
df_res=na.omit(df_res)
p5_1=box_line_plot(df_res,alternative='less',prefix='b_response')
mk_res=one_tail_mk(df_res)
mk_res
## Th1 CD4 abundance
# response
df_res=subtype_abund_sample[which(subtype_abund_sample$Response=='Responders'&subtype_abund_sample$cell_type=='Th1'),]
df_res=na.omit(df_res)
sp1=box_line_plot(df_res,alternative='less',prefix='th1_response')
mk_res=one_tail_mk(df_res)
mk_res
## Th1 CD4 abundance
# response
df_res=subtype_abund_sample[which(subtype_abund_sample$Response=='Responders'&subtype_abund_sample$cell_type=='Th1'),]
df_res=na.omit(df_res)
sp1=box_line_plot(df_res,alternative='less',prefix='th1_response')
mk_res=one_tail_mk(df_res)
mk_res
# non-response
df_non=subtype_abund_sample[which(subtype_abund_sample$Response=='Non-responders'&subtype_abund_sample$cell_type=='Th1'),]
df_non=na.omit(df_non)
sp1_non=box_line_plot(df_non,alternative='less',prefix='th1_non_response')
mk_res=one_tail_mk(df_non)
mk_res
subtype_abund_sample$cell_type
unique(subtype_abund_sample$cell_type)
## Treg abundance
# response
df_res=subtype_abund_sample[which(subtype_abund_sample$Response=='Responders'&subtype_abund_sample$cell_type=='Treg'),]
df_res=na.omit(df_res)
sp_treg=box_line_plot(df_res,alternative='less',prefix='treg_response')
mk_res=one_tail_mk(df_res)
## Treg abundance
# response
df_res=subtype_abund_sample[which(subtype_abund_sample$Response=='Responders'&subtype_abund_sample$cell_type=='Treg'),]
df_res=na.omit(df_res)
sp_treg=box_line_plot(df_res,alternative='less',prefix='treg_response')
mk_res=one_tail_mk(df_res)
mk_res
sp_treg
sp_treg=sp_treg+geom_text(x=3.5, y=0.02, label=paste0("Mann-Kendall test p-value: ", signif(mk_res[1],2)))
ggsave(file.path(outdir,paste0('treg_response_mk','.pdf')),sp_treg,width = 3.5,height = 4.5)
# non-response
df_non=subtype_abund_sample[which(subtype_abund_sample$Response=='Non-responders'&subtype_abund_sample$cell_type=='Treg'),]
df_non=na.omit(df_non)
# non-response
df_non=subtype_abund_sample[which(subtype_abund_sample$Response=='Non-responders'&subtype_abund_sample$cell_type=='Treg'),]
df_non=na.omit(df_non)
sp_treg_non=box_line_plot(df_non,alternative='less',prefix='treg_non_response')
mk_res=one_tail_mk(df_non)
sp_treg_non=sp_treg_non+geom_text(x=3.5, y=0.02, label=paste0("Mann-Kendall test p-value: ", signif(mk_res[1],2)))
ggsave(file.path(outdir,paste0('treg_non_response_mk','.pdf')),sp_treg_non,width = 3.5,height = 4.5)
mk_res
## Treg abundance
# response
df_res=subtype_abund_sample[which(subtype_abund_sample$Response=='Responders'&subtype_abund_sample$cell_type=='Treg'),]
df_res=na.omit(df_res)
sp_treg=box_line_plot(df_res,alternative='less',prefix='treg_response')
mk_res=one_tail_mk(df_res)
sp_treg=sp_treg+geom_text(x=3.5, y=0.02, label=paste0("Mann-Kendall test p-value: ", signif(mk_res[1],2)))
ggsave(file.path(outdir,paste0('treg_response_mk','.pdf')),sp_treg,width = 3.5,height = 4.5)
sp_treg
# non-response
df_non=subtype_abund_sample[which(subtype_abund_sample$Response=='Non-responders'&subtype_abund_sample$cell_type=='Treg'),]
df_non=na.omit(df_non)
sp_treg_non=box_line_plot(df_non,alternative='less',prefix='treg_non_response')
sp_treg_non
# responder vs non-responder
sp_treg_3=diff_abundance_box(cond1=df_res,cond2=df_non,prefix='treg_res_non',alternative = "less")
sp_treg_4=diff_abundance_line(cond1=df_res,cond2=df_non,prefix='treg_res_non_line',alternative = "less")
## Treg abundance
# response
df_res=subtype_abund_sample[which(subtype_abund_sample$Response=='Responders'&subtype_abund_sample$cell_type=='Treg'),]
df_res=na.omit(df_res)
df_res
sp_treg=box_line_plot(df_res,alternative='less',prefix='treg_response')
sp_treg
unique(cell_abund$cell_type)
unique(subtype_abund_sample$cell_type)
library(ggplot2)
library(survival)
library(survminer)
library(dplyr)
outdir='../results/figure4'
if (!dir.exists(outdir)){
dir.create(outdir,recursive = T)
}
## ------- Inputs and parameters -------
bulk_patient_score=readRDS('../data/bulk_patient_score.rds')
tcga_hnsc=read.delim('../data/tcga_hnsc_mean_tb_score.txt')
df_comb_filter=read.delim('../data/auc_teff_b_cell_patients.txt')
fixed_cutoff_odds_sum=read.delim('../data/fixed_cutoff_odds_sum.txt')
fixed_cutoff=readRDS('../data/fix_cutoff.rds')
## -------F4B: AUC barplot -------=
p=ggplot(data=df_comb_filter, aes(x=id, y=AUC,fill=sig_name)) +
geom_bar(stat="identity", position=position_dodge())+
geom_text(aes(label=AUC), position = position_dodge(0.9), vjust=1.6, color="white", size=2.5)+
theme_classic() + theme(axis.text.x = element_text(hjust = 1,angle = 60))+xlab('')+
facet_grid(~data_type,scales = 'free_x',space = "free")+scale_fill_brewer(palette="Dark2")
p
## ------- Identify fix threshold ------
# Plot the odds ratios against cutoffs
pdf(file.path(outdir,'fixed_threshold_max_odds.pdf'),width = 4,height = 3)
plot(fixed_cutoff$cutoffs, fixed_cutoff$odds_ratios, type = "l", xlab = "Cutoff", ylab = "Odds Ratio", main = "Maximizing Odds Ratio")
abline(v = fixed_cutoff$best_cutoff, col = "red", lty = 2)
dev.off()
## ------- Test fixed threshold in testing cohorts -------
p=ggplot(fixed_cutoff_odds_sum, aes(x = id, y = odds_ratio, fill = Type)) +
geom_bar(stat = "identity", color = "black", width = 0.7) +  # Adds a black border to bars
scale_fill_manual(values = c("Training" = "#D55E00", "Testing" = "#009E73")) +  # Dark orange and teal+
geom_text(aes(label=signif(odds_ratio,2)), vjust=-0.3, size=3.5)+
theme_minimal() +
labs(
x = "Cohort",
y = "Odds Ratio",
fill = "Cohort Type"
) +
theme(
plot.title = element_text(hjust = 0.5),
axis.text.x = element_text(angle = 45, hjust = 1)
)
p
## ------- Survival analysis -------
## Functions
hr_plot=function(df,surv_time,surv_status,sex_info,fig_title,xlim=3.5,width = 3,height = 5,prefix){
colnames(df)[which(colnames(df)==surv_time)]='time'
colnames(df)[which(colnames(df)==surv_status)]='status'
df$time=as.numeric(df$time)
df$status=as.numeric(df$status)
df$Age=as.numeric(df$Age)
df$Sex=as.factor(df$Sex)
if ('HPV' %in% colnames(df)){
if (isTRUE(sex_info)){
cox_model <- coxph(Surv(time, status) ~ Age + Sex + mean_score + HPV, data = df)
}else{
cox_model <- coxph(Surv(time, status) ~ Age + mean_score + HPV, data = df)
}
}else{
if (isTRUE(sex_info)){
cox_model <- coxph(Surv(time, status) ~ Age + Sex + mean_score, data = df)
}else{
cox_model <- coxph(Surv(time, status) ~ Age + mean_score, data = df)
}
}
# Extract coefficients and confidence intervals
cox_summary <- summary(cox_model)
hr_data <- data.frame(
term = rownames(cox_summary$coefficients),
hazard_ratio = (cox_summary$coefficients[, "coef"]),
lower_ci = log(cox_summary$conf.int[, "lower .95"]),
upper_ci = log(cox_summary$conf.int[, "upper .95"]),
p_value = cox_summary$coefficients[,'Pr(>|z|)']
)
hr_data <- hr_data %>% mutate(
p_value_label = ifelse(!is.na(p_value) & p_value < 0.05,
sprintf("%.3f", p_value), sprintf("%.3f", p_value))
)
# Plot
p=ggplot(hr_data, aes(x = hazard_ratio, y = term)) +
geom_point(shape = 15) +  # Square point to match original
geom_errorbarh(aes(xmin = lower_ci, xmax = upper_ci), height = 0.2) +
geom_vline(xintercept = 1, linetype = "dotted") +  # Reference line at HR = 1
labs(
title = fig_title,
x = "Hazard Ratio",
y = NULL
) +
theme_minimal() +expand_limits(x = xlim)+
theme(
plot.title = element_text(hjust = 0.5),
panel.grid.minor = element_blank(),
panel.grid.major = element_blank()
) +
geom_text(aes(label = p_value_label, x = upper_ci), hjust = -0.3)  # P-value text
ggsave(file.path(outdir,paste0(prefix,'.pdf')),p,width = width,height = height)
return(p)
}
## TCGA
df = tcga_hnsc
df$HPV[which(df$HPV=='negative')]='Neg'
df$HPV[which(df$HPV=='positive')]='Pos'
df=df[which(df$HPV!='indeterminate'),]
p_tcga=hr_plot(df = df,surv_time='OS_days',surv_status='OS_status',sex_info=T,fig_title='TCGA HNSC',xlim = 3.5,prefix = 'tcga_hnsc_cox')
p_tcga
p_tcga=hr_plot(df = df,surv_time='OS_days',surv_status='OS_status',sex_info=T,fig_title='TCGA HNSC',xlim = 3.5,width = 2,height = 3.5,prefix = 'tcga_hnsc_cox')
outdir
## TCGA
df = tcga_hnsc
df$HPV[which(df$HPV=='negative')]='Neg'
df$HPV[which(df$HPV=='positive')]='Pos'
df=df[which(df$HPV!='indeterminate'),]
p_tcga=hr_plot(df = df,surv_time='OS_days',surv_status='OS_status',sex_info=T,fig_title='TCGA HNSC',xlim = 3.5,width = 2,height = 3.5,prefix = 'tcga_hnsc_cox')
p_tcga
p_tcga=hr_plot(df = df,surv_time='OS_days',surv_status='OS_status',sex_info=T,fig_title='TCGA HNSC',xlim = 5,width = 1.5,height = 2.5,prefix = 'tcga_hnsc_cox')
p_tcga=hr_plot(df = df,surv_time='OS_days',surv_status='OS_status',sex_info=T,fig_title='TCGA HNSC',xlim = 15,width = 1.5,height = 2.5,prefix = 'tcga_hnsc_cox')
p_tcga=hr_plot(df = df,surv_time='OS_days',surv_status='OS_status',sex_info=T,fig_title='TCGA HNSC',xlim = 15,width = 2,height = 3.5,prefix = 'tcga_hnsc_cox')
p_tcga=hr_plot(df = df,surv_time='OS_days',surv_status='OS_status',sex_info=T,fig_title='TCGA HNSC',xlim = 15,width = 2,height = 4,prefix = 'tcga_hnsc_cox')
## Foy
df=bulk_patient_score$Foy1_2022
df$HPV_status[which(df$HPV_status==0)]='Neg'
df$HPV_status[which(df$HPV_status=='1')]='Pos'
df$HPV_status[which(df$HPV_status=='2')]='Unknown'
#df$HPV_status <- relevel(df$HPV_status, ref = "Unknown")
colnames(df)[which(colnames(df)=='HPV_status')]='HPV'
p_foy_os=hr_plot(df = df,surv_time='OS_days',surv_status='OS_status',sex_info=T,fig_title='Foy et al. OS',xlim = 30,width = 2,height = 4,prefix = 'foy_os_cox')
p_foy_os=hr_plot(df = df,surv_time='OS_days',surv_status='OS_status',sex_info=T,fig_title='Foy et al. OS',xlim = 30,width = 2.5,height = 4,prefix = 'foy_os_cox')
p_foy_os=hr_plot(df = df,surv_time='OS_days',surv_status='OS_status',sex_info=T,fig_title='Foy et al. OS',xlim = 30,width = 2.65,height = 4,prefix = 'foy_os_cox')
p_foy_os=hr_plot(df = df,surv_time='OS_days',surv_status='OS_status',sex_info=T,fig_title='Foy et al. OS',xlim = 25,width = 2.65,height = 4,prefix = 'foy_os_cox')
p_foy_os=hr_plot(df = df,surv_time='OS_days',surv_status='OS_status',sex_info=T,fig_title='Foy et al. OS',xlim = 25,width = 2.7,height = 4,prefix = 'foy_os_cox')
p_foy_pfs=hr_plot(df = df,surv_time='PFS_days',surv_status='PFS_status',sex_info=T,fig_title='Foy et al. PFS',xlim = 25,width = 2.7,height = 4,prefix = 'foy_pfs_cox')
## INSPIRE
df=bulk_patient_score$INSPIRE
p_INSPIRE_os=hr_plot(df = df,surv_time='OS_days',surv_status='OS_status',sex_info=F,fig_title='INSPIRE OS',xlim = 30,height = 3,prefix ='INSPIRE_os_cox')
p_INSPIRE_pfs=hr_plot(df = df,surv_time='PFS_days',surv_status='PFS_status',sex_info=F,fig_title='INSPIRE PFS',xlim = 30,height = 3,prefix ='INSPIRE_pfs_cox')
p_INSPIRE_os=hr_plot(df = df,surv_time='OS_days',surv_status='OS_status',sex_info=F,fig_title='INSPIRE OS',xlim = 30,width = 2,height = 2,prefix ='INSPIRE_os_cox')
p_INSPIRE_pfs=hr_plot(df = df,surv_time='PFS_days',surv_status='PFS_status',sex_info=F,fig_title='INSPIRE PFS',xlim = 30,width = 2,height = 2,prefix ='INSPIRE_pfs_cox')
p_INSPIRE_pfs=hr_plot(df = df,surv_time='PFS_days',surv_status='PFS_status',sex_info=F,fig_title='INSPIRE PFS',xlim = 30,width = 2.5,height = 2,prefix ='INSPIRE_pfs_cox')
p_INSPIRE_pfs=hr_plot(df = df,surv_time='PFS_days',surv_status='PFS_status',sex_info=F,fig_title='INSPIRE PFS',xlim = 30,width = 2.5,height = 2,prefix ='INSPIRE_pfs_cox')
p_INSPIRE_os=hr_plot(df = df,surv_time='OS_days',surv_status='OS_status',sex_info=F,fig_title='INSPIRE OS',xlim = 30,width = 2.5,height = 2,prefix ='INSPIRE_os_cox')
p_INSPIRE_pfs=hr_plot(df = df,surv_time='PFS_days',surv_status='PFS_status',sex_info=F,fig_title='INSPIRE PFS',xlim = 30,width = 2.5,height = 2,prefix ='INSPIRE_pfs_cox')
p_foy_os=hr_plot(df = df,surv_time='OS_days',surv_status='OS_status',sex_info=T,fig_title='Foy et al. OS',xlim = 25,width = 2.5,height = 4,prefix = 'foy_os_cox')
p_foy_pfs=hr_plot(df = df,surv_time='PFS_days',surv_status='PFS_status',sex_info=T,fig_title='Foy et al. PFS',xlim = 25,width = 2.5,height = 4,prefix = 'foy_pfs_cox')
## Foy
df=bulk_patient_score$Foy1_2022
df$HPV_status[which(df$HPV_status==0)]='Neg'
df$HPV_status[which(df$HPV_status=='1')]='Pos'
df$HPV_status[which(df$HPV_status=='2')]='Unknown'
#df$HPV_status <- relevel(df$HPV_status, ref = "Unknown")
colnames(df)[which(colnames(df)=='HPV_status')]='HPV'
p_foy_os=hr_plot(df = df,surv_time='OS_days',surv_status='OS_status',sex_info=T,fig_title='Foy et al. OS',xlim = 25,width = 2.5,height = 4,prefix = 'foy_os_cox')
p_foy_pfs=hr_plot(df = df,surv_time='PFS_days',surv_status='PFS_status',sex_info=T,fig_title='Foy et al. PFS',xlim = 25,width = 2.5,height = 4,prefix = 'foy_pfs_cox')
p_foy_os=hr_plot(df = df,surv_time='OS_days',surv_status='OS_status',sex_info=T,fig_title='Foy et al. OS',xlim = 25,width = 2.3,height = 4,prefix = 'foy_os_cox')
p_foy_pfs=hr_plot(df = df,surv_time='PFS_days',surv_status='PFS_status',sex_info=T,fig_title='Foy et al. PFS',xlim = 25,width = 2.3,height = 4,prefix = 'foy_pfs_cox')
## INSPIRE
df=bulk_patient_score$INSPIRE
p_INSPIRE_os=hr_plot(df = df,surv_time='OS_days',surv_status='OS_status',sex_info=F,fig_title='INSPIRE OS',xlim = 30,width = 2.3,height = 2,prefix ='INSPIRE_os_cox')
p_INSPIRE_pfs=hr_plot(df = df,surv_time='PFS_days',surv_status='PFS_status',sex_info=F,fig_title='INSPIRE PFS',xlim = 30,width = 2.3,height = 2,prefix ='INSPIRE_pfs_cox')
library(slingshot)
library(ggplot2)
library(Seurat)
library(reshape)
library(ggpubr)
library(immunarch)
## ------- Inputs and parameters -------
tcr_meta=read.delim('../data/sc_tcr_meta.txt')
teff_subtype_average_clone_size=read.delim('../data/teff_subtype_average_clone_size.txt')
teff_subtype_extend_clone_fre=read.delim('../data/teff_subtype_extend_clone_fre.txt')
bulk_tcr_div_inv_simp=read.delim('../data/bulk_tcr_div_inv_simp.txt')
bulk_bcr_div_inv_simp=read.delim('../data/bulk_bcr_div_inv_simp.txt')
cd4_tcr_meta=read.delim('../data/sc_cd4_tcr_meta.txt')
View(tcr_meta)
## ------- Inputs and parameters -------
bulk_patient_score=readRDS('../data/bulk_patient_score.rds')
View(bulk_patient_score)
